name: üöÄ Auto Publish Clean Architecture Template

on:
  push:
    branches:
      - main
  workflow_dispatch:  # tamb√©m permite rodar manualmente no GitHub

permissions:
  contents: write
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: üì¶ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # necess√°rio para ler tags anteriores

      - name: üß© Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: üè∑Ô∏è Detect next semantic version
        id: versioning
        run: |
          echo "üîç Checking last Git tag..."
          last_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
          echo "Last tag: $last_tag"
          version=${last_tag#v}
          IFS='.' read -r major minor patch <<< "$version"
          patch=$((patch + 1))
          new_version="$major.$minor.$patch"
          echo "Next version: v$new_version"
          echo "VERSION=$new_version" >> $GITHUB_ENV

      - name: üèóÔ∏è Build and pack NuGet template
        run: |
          dotnet pack ./GRRInnovations.CleanArchitecture.Template.csproj \
            --configuration Release \
            --output ./nupkgs \
            /p:Version=${{ env.VERSION }}
          echo "‚úÖ Template version ${{ env.VERSION }} packed successfully."
          ls ./nupkgs

      - name: üè∑Ô∏è Create and push new Git tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "v${{ env.VERSION }}"
          git push origin "v${{ env.VERSION }}"
          echo "‚úÖ Tag v${{ env.VERSION }} pushed to repository."

      - name: üöÄ Publish to NuGet.org
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          echo "Pushing package to NuGet.org..."
          dotnet nuget push ./nupkgs/*.nupkg \
            --api-key $NUGET_API_KEY \
            --source https://api.nuget.org/v3/index.json \
            --skip-duplicate
          echo "üéâ Package v${{ env.VERSION }} published to NuGet.org!"
