name: 🚀 Auto Publish NuGet Template

on:
  push:
    branches:
      - main  # toda vez que fizer push na main
permissions:
  packages: write

jobs:
  publish:
    runs-on: windows-latest

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # importante para conseguir ler tags anteriores

      - name: ⚙️ Download NuGet CLI
        run: |
          Invoke-WebRequest -Uri https://dist.nuget.org/win-x86-commandline/latest/nuget.exe -OutFile nuget.exe

      - name: 🔍 Detect last version tag
        id: get_version
        shell: pwsh
        run: |
          $tags = git tag --sort=-v:refname
          if ($tags.Length -eq 0) {
            $newVersion = "1.0.0"
          } else {
            $lastTag = $tags[0]
            Write-Host "Last tag found: $lastTag"
            $split = $lastTag -replace 'v','' -split '\.'
            $major = [int]$split[0]
            $minor = [int]$split[1]
            $patch = [int]$split[2] + 1
            $newVersion = "$major.$minor.$patch"
          }
          echo "VERSION=$newVersion" >> $env:GITHUB_ENV
          echo "Next version: v$newVersion"

      - name: 🏷️ Create and push new tag
        run: |
          git config user.name "Gabriel Rossi"
          git config user.email "gabriel.rossi@seuemail.com"
          git tag "v${{ env.VERSION }}"
          git push "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}" "v${{ env.VERSION }}"

      - name: 🏗️ Pack template
        run: ./nuget.exe pack GRRInnovations.CleanArchitecture.Template.nuspec -OutputDirectory ./nupkgs -Version $env:VERSION

      - name: 🚀 Publish to NuGet.org
        run: ./nuget.exe push ./nupkgs/*.nupkg -ApiKey ${{ secrets.NUGET_API_KEY }} -Source https://api.nuget.org/v3/index.json
