name: üöÄ Auto Publish NuGet Template

on:
  push:
    branches:
      - main  # toda vez que fizer push na main
permissions:
  packages: write
  contents: write

jobs:
  publish:
    runs-on: windows-latest

    steps:
      - name: üì¶ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # importante para conseguir ler tags anteriores

      - name: ‚öôÔ∏è Download NuGet CLI
        run: |
          Invoke-WebRequest -Uri https://dist.nuget.org/win-x86-commandline/latest/nuget.exe -OutFile nuget.exe

      - name: üîç Detect last version tag
        id: get_version
        shell: pwsh
        run: |
          $tags = git tag --sort=-v:refname
          if ($tags.Length -eq 0) {
            $newVersion = "1.0.0"
          } else {
            $lastTag = $tags[0]
            Write-Host "Last tag found: $lastTag"
            $split = $lastTag -replace 'v','' -split '\.'
            $major = [int]$split[0]
            $minor = [int]$split[1]
            $patch = [int]$split[2] + 1
            $newVersion = "$major.$minor.$patch"
          }
          echo "VERSION=$newVersion" >> $env:GITHUB_ENV
          echo "Next version: v$newVersion"

      - name: üè∑Ô∏è Create and push new tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "Gabriel Rossi"
          git config user.email "gabriel.rossi@users.noreply.github.com"
          git tag "v${{ env.VERSION }}"
          git push https://${{ github.actor }}:${{ env.GITHUB_TOKEN }}@github.com/${{ github.repository }} "v${{ env.VERSION }}"


      - name: üèóÔ∏è Pack template
        shell: pwsh
        run: |
          Write-Host "Creating output directory..."
          New-Item -ItemType Directory -Force -Path "$PWD/nupkgs" | Out-Null
          Write-Host "Packing template version $env:VERSION..."
          ./nuget.exe pack "$PWD/GRRInnovations.CleanArchitecture.Template.nuspec" -OutputDirectory "$PWD/nupkgs" -Version $env:VERSION
          Write-Host "Contents of nupkgs directory:"
          Get-ChildItem "$PWD/nupkgs"


      - name: üöÄ Publish to NuGet.org
        shell: pwsh
        run: |
          Write-Host "Pushing package to NuGet.org..."
          ./nuget.exe push "$PWD/nupkgs/*.nupkg" -ApiKey ${{ secrets.NUGET_API_KEY }} -Source https://api.nuget.org/v3/index.json

